# Makefile for fl_imgtk
# (C)2017 Raphael Kim / rageworx@gmail.com
#

#########################################################################
# About cross compiler, or other platform :
#
# To enable build for embedded linux, you may encomment next 2 lines.
# Or, may need to change your cross compiler path with environments.
# It is up to developer !

# CCPREPATH = ${ARM_LINUX_GCC_PATH}
# CCPREFIX  = arm-linux-

# To enable build for embedded linux, change following line.
# CCPATH    = ${CCPREPATH}/${CCPREFIX}
CCPATH =
#########################################################################

# Compiler configure.
GCC = ${CCPATH}gcc
GPP = ${CCPATH}g++
AR  = ${CCPATH}ar

# FLTK place
FLTKDIR    = $(shell fltk-config --includedir)

# Sources and how it built
# Optimization issue: recommend to build with using -ffast-math option.
# Change if your CPU architecture supports more high technologies.
INCDIR      = ./inc
SOURCEDIR   = ./src
OBJDIR      = ./obj
OUTBIN      = libfl_imgtk.a
OUTDIR      = ./lib
INSTALLDIR  = /usr/local
DEFINEOPT   = -DUSING_INTERPOLATED_ROTATE_FREE -DUSING_OMP
DEFINEOPT  += -DFLTK_ABI_VERISON=10304
OPTIMIZEOPT = -ffast-math -fopenmp -Os -s
CPUARCHOPT  =

ifeq (debug,$(firstword $(MAKECMDGOALS)))
	DEFINEOPT += -DDEBUG
	OPTIMIZEOPT = -ffast-math -g
	OUTBIN = libfl_imgtk_d.a
endif

CFLAGS   += -std=c++11
CFLAGS   += -I$(INCDIR) -I$(SOURCEDIR) -I$(FLTKDIR)
CFLAGS   += $(DEFINEOPT) $(OPTIMIZEOPT) $(CPUARCHOPT) $(BITSOPT)

.PHONY: prepare clean install uninstall

all: prepare ${OUTDIR}/${OUTBIN}

debug: all

prepare:
	@mkdir -p ${OBJDIR}
	@mkdir -p ${OUTDIR}

${OBJDIR}/fl_imgtk_tonemap.o:
	@$(GPP) -c ${SOURCEDIR}/fl_imgtk_tonemap.cpp ${CFLAGS} -o $@

${OBJDIR}/fl_smimg.o:
	@$(GPP) -c ${SOURCEDIR}/fl_smimg.cpp ${CFLAGS} -o $@

${OBJDIR}/fl_imgtk_clahe.o:
	@$(GPP) -c ${SOURCEDIR}/fl_imgtk_clahe.cpp ${CFLAGS} -o $@

${OBJDIR}/fl_imgtk.o:
	@$(GPP) -c ${SOURCEDIR}/fl_imgtk.cpp ${CFLAGS} -o $@


${OUTDIR}/${OUTBIN}: ${OBJDIR}/fl_imgtk_tonemap.o ${OBJDIR}/fl_smimg.o ${OBJDIR}/fl_imgtk_clahe.o ${OBJDIR}/fl_imgtk.o
	@echo "Generating $@ ..."
	@$(AR) -q $@ ${OBJDIR}/*.o
	@cp -f ${INCDIR}/fl_imgtk.h ${OUTDIR}

clean:
	@echo "Cleaning built directories ..."
	@rm -rf ${OBJDIR}/*
	@rm -rf ${OUTDIR}/${OUTBIN}

install:
	@if [ ! -e ${OUTDIR}/${OUTBIN} ];then echo "Error: library is not built yey, build it and try again"; exit 1; fi
	@echo "Installing library .."
	@cp -f ${OUTDIR}/${OUTBIN} ${INSTALLDIR}/lib
	@echo "Installing header .."
	@mkdir -p ${INSTALLDIR}/include
	@cp -f ${INCDIR}/fl_imgtk.h ${INSTALLDIR}/include

uninstall:
	@if [ -e ${INSTALLDIR}/lib/${OUTBIN} ];then \
	 echo "Removing library ...";\
	 rm -f ${INSTALLDIR}/lib/${OUTBIN}; fi
	@if [ -e ${INSTALLDIR}/include/fl_imgtk.h ]; then \
	 echo "Removing header ...";\
	 rm -f ${INSTALLDIR}/include/fl_imgtk.h; fi
